@using Ispit.Todo.Data
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Ispit.Todo.Models.Dbo.TodoTask
@inject ApplicationDbContext context;


@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var lists = context.TodoList.ToList();
}

<h1>Create</h1>

<h4>TodoTask</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateTask">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="TodoList" class="control-label">Choose list</label>
                <select name="ListName" class="form-select" aria-label="Default select example">
                    @foreach (var item in lists)
                    {
                        <option value="@item.Id">@item.ListName</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Created" class="control-label"></label>
                <input asp-for="Created" class="form-control" />
                <span asp-validation-for="Created" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TaskName" class="control-label"></label>
                <input asp-for="TaskName" class="form-control" />
                <span asp-validation-for="TaskName" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Status" /> @Html.DisplayNameFor(model => model.Status)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="TaskIndex">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}